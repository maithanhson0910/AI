
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.io.*;
import java.lang.reflect.Array;
import java.sql.*;
import java.text.DecimalFormat;
import java.util.Scanner;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.TableColumn;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Quang
 */
public class Danhgia_Tuvan extends javax.swing.JFrame {

    public static Vector diem_danhgia;
    public int[][] mang_diem_DG; // mang 2 chieu
    public float[] mang_Trongso; // mang trong so
    public float[] danhgia_tt; // mang danh gia truyen thong khong trong so
    public float tong_trongso;
    public Object[][] oj_lesson;
    public int row;
    JFrame frame;
    public int n = 0; // so chuyen gia
    public static float[] temp_C;  //mang luu tru do tich cuc
    public float[] chose_danhgia; //mang luu bo danh gia da dc chon
    Connection con = null;
    Statement stmt = null;
    String userName;
    String password;
    Tieu_chi tieu_chi;
    Chose_Lesson chose_lesson;
    public static Vector vt_rating, vt_chose_lesson;
    public String body_mail;

    /**
     * Creates new form Danhgia_Tuvan
     */
    public Danhgia_Tuvan() {
        initComponents();
        this.setLocationRelativeTo(null);
        docFile();
        connectionSQL();
        jSpinner1.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chương trình đánh giá và tư vấn bài giảng");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Đánh giá của chuyên gia"));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Chi tiết đánh giá"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "TT", "Tên", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X9"
                }
        ));
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setRowSelectionAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(180);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setResizable(false);
        jTable1.getColumnModel().getColumn(4).setResizable(false);
        jTable1.getColumnModel().getColumn(5).setResizable(false);
        jTable1.getColumnModel().getColumn(6).setResizable(false);
        jTable1.getColumnModel().getColumn(7).setResizable(false);
        jTable1.getColumnModel().getColumn(8).setResizable(false);
        jTable1.getColumnModel().getColumn(9).setResizable(false);
        jTable1.getColumnModel().getColumn(10).setResizable(false);

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jLabel1.setText("Số chuyên gia");

        jButton1.setText("Xem các tiêu chí");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Chọn bài giảng");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Tên bài giảng:");

        jLabel8.setText("Tác giả:");

        jLabel10.setText("Chương trình học:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGap(24, 24, 24)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addComponent(jLabel1)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(55, 55, 55)
                                                                .addComponent(jButton1))
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addComponent(jLabel6)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jLabel7))
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addComponent(jLabel10)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jLabel11)))
                                                .addGap(62, 62, 62)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addComponent(jLabel8)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jLabel9))))
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton1)
                                        .addComponent(jLabel1)
                                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Bộ trọng số"));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {"Trọng số", "0.2", "0.2", "0.1", "0.2", "0.05", "0.05", "0.1", "0.05", "0.05"}
                },
                new String[]{
                    "", "H1", "H2", "H3", "H4", "H5", "H6", "H7", "H8", "H9"
                }
        ));
        jTable2.setRowSelectionAllowed(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTable2MouseExited(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        jTable2.getColumnModel().getColumn(0).setPreferredWidth(120);
        jTable2.getColumnModel().getColumn(1).setResizable(false);
        jTable2.getColumnModel().getColumn(2).setResizable(false);
        jTable2.getColumnModel().getColumn(3).setResizable(false);
        jTable2.getColumnModel().getColumn(4).setResizable(false);
        jTable2.getColumnModel().getColumn(5).setResizable(false);
        jTable2.getColumnModel().getColumn(6).setResizable(false);
        jTable2.getColumnModel().getColumn(7).setResizable(false);
        jTable2.getColumnModel().getColumn(8).setResizable(false);
        jTable2.getColumnModel().getColumn(9).setResizable(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22))
        );
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(383, 383, 383))
        );

        jButton3.setText("Xếp hạng chuyên gia");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3)
                                .addGap(241, 241, 241))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)
                                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Dữ liệu đánh giá", jPanel1);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Bảng xếp hạng đánh giá"));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "TT", "Tên", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X9", "Độ tích cực"
                }
        ));
        jScrollPane3.setViewportView(jTable3);
        jTable3.getColumnModel().getColumn(0).setResizable(false);
        jTable3.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTable3.getColumnModel().getColumn(1).setResizable(false);
        jTable3.getColumnModel().getColumn(1).setPreferredWidth(150);
        jTable3.getColumnModel().getColumn(2).setResizable(false);
        jTable3.getColumnModel().getColumn(3).setResizable(false);
        jTable3.getColumnModel().getColumn(4).setResizable(false);
        jTable3.getColumnModel().getColumn(5).setResizable(false);
        jTable3.getColumnModel().getColumn(6).setResizable(false);
        jTable3.getColumnModel().getColumn(7).setResizable(false);
        jTable3.getColumnModel().getColumn(8).setResizable(false);
        jTable3.getColumnModel().getColumn(9).setResizable(false);
        jTable3.getColumnModel().getColumn(10).setResizable(false);
        jTable3.getColumnModel().getColumn(11).setResizable(false);
        jTable3.getColumnModel().getColumn(11).setPreferredWidth(150);

        jButton4.setText("Đánh giá");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addGap(38, 38, 38)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addGap(304, 304, 304)
                                                .addComponent(jButton4)))
                                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jButton4)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(255, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Xếp hạng chuyên gia", jPanel2);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Đánh giá chất lượng bài giảng"));

        jLabel2.setText("Đánh giá chất lượng bài giảng đạt mức:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
                jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel2)
                                .addGap(21, 21, 21)
                                .addComponent(jLabel3)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
                jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Tư vấn cho bài giảng"));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        jButton5.setText("Gửi mail");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
                jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel9Layout.createSequentialGroup()
                                                .addComponent(jScrollPane4)
                                                .addContainerGap())
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                                .addGap(0, 293, Short.MAX_VALUE)
                                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(287, 287, 287))))
        );
        jPanel9Layout.setVerticalGroup(
                jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                                .addComponent(jButton5)
                                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(35, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Đánh giá và tư vấn", jPanel3);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Đánh giá chất lượng bài giảng"));

        jLabel4.setText("Đánh giá chất lượng bài giảng đạt mức:");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
                jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel4)
                                .addGap(21, 21, 21)
                                .addComponent(jLabel5)
                                .addContainerGap(437, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
                jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5))
                                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Tư vấn cho bài giảng"));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane5.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
                jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel12Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane5)
                                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
                jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel12Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
                jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
                jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(35, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Đánh giá truyền thống", jPanel10);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        tieu_chi = new Tieu_chi();
        tieu_chi.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        n = Integer.valueOf(jSpinner1.getValue().toString());
        process_Danhgia_Trongso();
        int debug = 0;

        if (n == 0) {
            debug = 1;
        }

        if (debug == 1) {
            JOptionPane jo = new JOptionPane("Thông báo");
            jo.showMessageDialog(this, "Bạn chưa nhập thông tin đánh giá của chuyên gia");
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 9; j++) {
                if ((mang_diem_DG[i][j] > 9) || (mang_diem_DG[i][j] == 0)) {
                    debug = 2;
                }
            }
        }

        if (debug == 2) {
            JOptionPane jo = new JOptionPane("Thông báo");
            jo.showMessageDialog(this, "Giá trị đánh giá tác động của tiêu chí phải là số nguyên thuộc [1,9]");
        }

        if (tong_trongso != 1) {
            debug = 3;
        }

        if (debug != 1 && debug != 2) {
            if (debug == 3) {
                JOptionPane jo = new JOptionPane("Thông báo");
                jo.showMessageDialog(this, "Tổng bộ trọng số phải có giá trị bằng 1");
            }
        }

        if (debug == 0) {
            update_Rating();
            pickCG();
            if (n > 1) {
                sap_Xep();
            }
            input_table3();
            jTabbedPane1.setSelectedIndex(1);
            process_DG_TT();
            try {
                jLabel5.setText(danhgia_Tuvan(danhgia_tt)[0]);
                jTextArea2.setText(danhgia_Tuvan(danhgia_tt)[1]);
            } catch (SQLException ex) {
                Logger.getLogger(Danhgia_Tuvan.class.getName()).log(Level.SEVERE, null, ex);
            }
            jTextArea2.setEditable(false);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
//        connectionSQL();
        int row_select = jTable3.getSelectedRow();
        if (row_select == -1) {
            JOptionPane jo = new JOptionPane("Thông báo");
            jo.showMessageDialog(this, "Bạn chưa chọn chuyên gia có đánh giá phù hợp");
        } else {
            try {
                chose_danhgia = new float[9];             // mang du lieu danh gia cua chuyen gia duoc chon
                for (int i = 0; i < 9; i++) {
                    chose_danhgia[i] = Float.valueOf(jTable3.getValueAt(row_select, i + 2).toString());
                }
                String str_body = "Bài giảng đạt chất lượng: ";
                str_body += danhgia_Tuvan(chose_danhgia)[0];
                str_body += "\n Tư vấn: \n";
                str_body += danhgia_Tuvan(chose_danhgia)[1];
                body_mail = new String(str_body);

                jLabel3.setText(danhgia_Tuvan(chose_danhgia)[0]);
                jTextArea1.setText(danhgia_Tuvan(chose_danhgia)[1]);
                jTextArea1.setEditable(false);
                jTabbedPane1.setSelectedIndex(2);
            } catch (SQLException ex) {
                Logger.getLogger(Danhgia_Tuvan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseExited

    }//GEN-LAST:event_jTable2MouseExited

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        // TODO add your handling code here:
        if (vt_rating.size() == 0) {
            if (jTable1.getRowCount() == 0) {
                set_NumberCG();
            } else {
                int dem = 0;
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    for (int j = 2; j < 11; j++) {
                        if (jTable1.getValueAt(i, j) != null) {
                            dem++;
                            break;
                        }
                    }
                }

                if (dem == 0) {
                    set_NumberCG();
                } else {
                    int[] debug = new int[dem];
                    int count = 0;
                    for (int i = 0; i < jTable1.getRowCount(); i++) {
                        for (int j = 2; j < 11; j++) {
                            if (jTable1.getValueAt(i, j) != null) {
                                debug[count] = i;
                                count++;
                                break;
                            }
                        }
                    }

                    if ((Integer) jSpinner1.getValue() >= debug.length) {
                        oj_lesson = new Object[(Integer) jSpinner1.getValue()][11];
                        for (int i = 0; i < debug.length; i++) {
                            oj_lesson[i][0] = i + 1;
                            oj_lesson[i][1] = "Chuyên gia " + (i + 1);
                            for (int j = 2; j < 11; j++) {
                                oj_lesson[i][j] = jTable1.getValueAt(i, j);
                            }
                        }
                        for (int i = debug.length; i < (Integer) jSpinner1.getValue(); i++) {
                            oj_lesson[i][0] = i + 1;
                            oj_lesson[i][1] = "Chuyên gia " + (i + 1);
                        }
                        set_Table1(oj_lesson);
                    } else {
                        oj_lesson = new Object[(Integer) jSpinner1.getValue()][11];
                        for (int i = 0; i < (Integer) jSpinner1.getValue(); i++) {
                            oj_lesson[i][0] = i + 1;
                            oj_lesson[i][1] = "Chuyên gia " + (i + 1);
                            for (int j = 2; j < 11; j++) {
                                oj_lesson[i][j] = jTable1.getValueAt(i, j);
                            }
                        }
                        set_Table1(oj_lesson);
                    }
                }
            }
        } else {
            oj_lesson = new Object[(Integer) jSpinner1.getValue()][11];
            for (int i = 0; i < vt_rating.size(); i++) {
                oj_lesson[i][0] = i + 1;
                oj_lesson[i][1] = "Chuyên gia " + (i + 1);
                oj_lesson[i][2] = ((Info_Rating) vt_rating.elementAt(i)).x1;
                oj_lesson[i][3] = ((Info_Rating) vt_rating.elementAt(i)).x2;
                oj_lesson[i][4] = ((Info_Rating) vt_rating.elementAt(i)).x3;
                oj_lesson[i][5] = ((Info_Rating) vt_rating.elementAt(i)).x4;
                oj_lesson[i][6] = ((Info_Rating) vt_rating.elementAt(i)).x5;
                oj_lesson[i][7] = ((Info_Rating) vt_rating.elementAt(i)).x6;
                oj_lesson[i][8] = ((Info_Rating) vt_rating.elementAt(i)).x7;
                oj_lesson[i][9] = ((Info_Rating) vt_rating.elementAt(i)).x8;
                oj_lesson[i][10] = ((Info_Rating) vt_rating.elementAt(i)).x9;
            }
            for (int i = vt_rating.size(); i < (Integer) jSpinner1.getValue(); i++) {
                oj_lesson[i][0] = i + 1;
                oj_lesson[i][1] = "Chuyên gia " + (i + 1);
            }
            set_Table1(oj_lesson);
        }

    }//GEN-LAST:event_jSpinner1StateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        chose_lesson = new Chose_Lesson();
        chose_lesson.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            int y = evt.getY();
            row = Math.round(y / jTable1.getRowHeight());
            jTable1.setRowSelectionInterval(row, row);
            JPopupMenu popupMenu = new JPopupMenu();
            JMenuItem deleMenuItem = new JMenuItem("Delete");

            deleMenuItem.addActionListener(new ActionListener() {

                public void actionPerformed(ActionEvent e) {
                    int n = JOptionPane.showConfirmDialog(frame, "Bạn có chắc chắn muốn xóa sinh viên khỏi danh sách",
                            "Thông Báo",
                            JOptionPane.YES_NO_OPTION);
                    if (n == JOptionPane.YES_OPTION) {
                        try {
                            String space = " ";
                            String str = "Delete From Rating where" + space;
                            str += "ID_Lesson=" + ((Info_Lesson) vt_chose_lesson.elementAt(0)).ID_lesson + " and" + space;
                            str += "X1=" + ((Info_Rating) vt_rating.elementAt(row)).x1 + " and" + space;
                            str += "X2=" + ((Info_Rating) vt_rating.elementAt(row)).x2 + " and" + space;
                            str += "X3=" + ((Info_Rating) vt_rating.elementAt(row)).x3 + " and" + space;
                            str += "X4=" + ((Info_Rating) vt_rating.elementAt(row)).x4 + " and" + space;
                            str += "X5=" + ((Info_Rating) vt_rating.elementAt(row)).x5 + " and" + space;
                            str += "X6=" + ((Info_Rating) vt_rating.elementAt(row)).x6 + " and" + space;
                            str += "X7=" + ((Info_Rating) vt_rating.elementAt(row)).x7 + " and" + space;
                            str += "X8=" + ((Info_Rating) vt_rating.elementAt(row)).x8 + " and" + space;
                            str += "X9=" + ((Info_Rating) vt_rating.elementAt(row)).x9;
                            stmt = con.createStatement();
                            stmt.executeUpdate(str);
                            con.commit();

                        } catch (SQLException ex) {
                            Logger.getLogger(Danhgia_Tuvan.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        show_Danhgia(((Info_Lesson) vt_chose_lesson.elementAt(0)).ID_lesson);
                    }
                }
            });
            popupMenu.add(deleMenuItem);
            jTable1.setComponentPopupMenu(popupMenu);
        }
    }//GEN-LAST:event_jTable1MousePressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if ((jTextArea1.getText() != null) && (jLabel3.getText() != null)) {
            String subject = "Kết quả đánh giá và tư vấn bài giảng \" " + ((Info_Lesson) vt_chose_lesson.elementAt(0)).name_lesson + " \"";
            String str = "Select mail From Lesson,Author where Lesson.ID_Author = Author.ID_Author and Lesson.ID_Lesson=" + ((Info_Lesson) vt_chose_lesson.elementAt(0)).ID_lesson;
            String mail = "";
            try {
                stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery(str);
                rs.next();
                mail = rs.getString(1);
            } catch (SQLException ex) {
                Logger.getLogger(Danhgia_Tuvan.class.getName()).log(Level.SEVERE, null, ex);
            }
            sendMail(mail, subject, body_mail);
        } else {
            JOptionPane jo = new JOptionPane("Thông báo");
            jo.showMessageDialog(this, "Chưa có kết quả tư vấn và đánh giá");
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {

        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.smart.SmartLookAndFeel");
        } catch (UnsupportedLookAndFeelException e) {
            System.out.println(e.toString());
        } catch (ClassNotFoundException e) {
            System.out.println(e.toString());
        } catch (InstantiationException e) {
            System.out.println(e.toString());
        } catch (IllegalAccessException e) {
            System.out.println(e.toString());
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Danhgia_Tuvan().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    public static javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    public static javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    public static javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    public static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    public static javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables

    //--------------------- XEP HANG DANH GIA CUA CHUYEN GIA -----------------------------------
    //Cai dat so chuyen gia tham gia danh gia
    public void set_NumberCG() {
        n = Integer.valueOf(jSpinner1.getValue().toString());
        Object[][] oj = new Object[n][11];

        for (int i = 0; i < n; i++) {
            oj[i][0] = i + 1;
            int number = i + 1;
            oj[i][1] = "Chuyên gia " + number;

        }

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                oj,
                new String[]{
                    "TT", "Tên", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X9"
                }) {

            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, true, true, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        jTable1.setCellSelectionEnabled(true);
        jTable1.setDefaultEditor(Integer.class, new IntegerEditor(1, 9));

        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(180);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setResizable(false);
        jTable1.getColumnModel().getColumn(4).setResizable(false);
        jTable1.getColumnModel().getColumn(5).setResizable(false);
        jTable1.getColumnModel().getColumn(6).setResizable(false);
        jTable1.getColumnModel().getColumn(7).setResizable(false);
        jTable1.getColumnModel().getColumn(8).setResizable(false);
        jTable1.getColumnModel().getColumn(9).setResizable(false);
        jTable1.getColumnModel().getColumn(10).setResizable(false);

    }

    public void process_Danhgia_Trongso() {
        mang_diem_DG = new int[n][9];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 9; j++) {
                if (jTable1.getValueAt(i, j + 2) != null) {
                    mang_diem_DG[i][j] = Integer.valueOf(jTable1.getValueAt(i, j + 2).toString());
                } else {
                    mang_diem_DG[i][j] = 0;
                }
            }
        }

//        trong_so = new Vector();
//        Info_trongso info_trongso = new Info_trongso();
//        info_trongso.h1 = Float.valueOf(jTable2.getValueAt(0, 1).toString());
//        info_trongso.h2 = Float.valueOf(jTable2.getValueAt(0, 2).toString());
//        info_trongso.h3 = Float.valueOf(jTable2.getValueAt(0, 3).toString());
//        info_trongso.h4 = Float.valueOf(jTable2.getValueAt(0, 4).toString());
//        info_trongso.h5 = Float.valueOf(jTable2.getValueAt(0, 5).toString());
//        info_trongso.h6 = Float.valueOf(jTable2.getValueAt(0, 6).toString());
//        info_trongso.h7 = Float.valueOf(jTable2.getValueAt(0, 7).toString());
//        info_trongso.h8 = Float.valueOf(jTable2.getValueAt(0, 8).toString());
//        info_trongso.h9 = Float.valueOf(jTable2.getValueAt(0, 9).toString());
//        trong_so.add(info_trongso);
        mang_Trongso = new float[9];

        for (int i = 1; i < 10; i++) {
            mang_Trongso[i - 1] = Float.valueOf(jTable2.getValueAt(0, i).toString());
        }

        tong_trongso = 0;

        for (int i = 0; i < 9; i++) {
            tong_trongso += mang_Trongso[i];
        }
    }

    // Chuc nang xep hang danh gia cua chuyen gia
    public void pickCG() {
        if (n > 1) {
            process_TOPSIS(mang_diem_DG, mang_Trongso);
        } else {
            diem_danhgia = new Vector();
            Info_Danhgia info = new Info_Danhgia();
            info.name = jTable1.getValueAt(0, 1).toString();
            info.x1 = Integer.valueOf(jTable1.getValueAt(0, 2).toString());
            info.x2 = Integer.valueOf(jTable1.getValueAt(0, 3).toString());
            info.x3 = Integer.valueOf(jTable1.getValueAt(0, 4).toString());
            info.x4 = Integer.valueOf(jTable1.getValueAt(0, 5).toString());
            info.x5 = Integer.valueOf(jTable1.getValueAt(0, 6).toString());
            info.x6 = Integer.valueOf(jTable1.getValueAt(0, 7).toString());
            info.x7 = Integer.valueOf(jTable1.getValueAt(0, 8).toString());
            info.x8 = Integer.valueOf(jTable1.getValueAt(0, 9).toString());
            info.x9 = Integer.valueOf(jTable1.getValueAt(0, 10).toString());
            info.danh_gia = 0;
            diem_danhgia.add(info);
        }
    }

    //Cai dat thuat toan TOPSIS
    public void process_TOPSIS(int[][] mang_diem, float[] trongSo) {

        double[] temp = new double[9];
        for (int j = 0; j < 9; j++) {
            int tong = 0;
            for (int i = 0; i < n; i++) {
                int S = 0;
                S = mang_diem[i][j] * mang_diem[i][j];
                tong += S;
            }
            temp[j] = (double) Math.sqrt(tong);
        }

        // Tinh r
        float[][] temp_r = new float[n][9];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 9; j++) {
                temp_r[i][j] = (float) (mang_diem[i][j] / temp[j]);
            }
        }

        // Tinh v
        float[][] temp_v = new float[n][9];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 9; j++) {
                temp_v[i][j] = temp_r[i][j] * trongSo[j];
            }
        }

        // Tinh A*
        float[] temp_A = new float[9];
        for (int j = 0; j < 9; j++) {
            float max = temp_v[0][j];
            for (int i = 1; i < n; i++) {
                if (temp_v[i][j] >= max) {
                    max = temp_v[i][j];
                }
            }
            temp_A[j] = max;
        }

        // Tinh A-
        float[] temp_A1 = new float[9];
        for (int j = 0; j < 9; j++) {
            float min = temp_v[0][j];
            for (int i = 1; i < n; i++) {
                if (temp_v[i][j] <= min) {
                    min = temp_v[i][j];
                }
            }
            temp_A1[j] = min;
        }

        //Tinh S*
        float[][] temp_S_tg = new float[5][9];
        for (int j = 0; j < 9; j++) {
            for (int i = 0; i < n; i++) {
                temp_S_tg[i][j] = (temp_v[i][j] - temp_A[j]) * (temp_v[i][j] - temp_A[j]);
            }
        }

        float[] temp_S = new float[n];

        for (int i = 0; i < n; i++) {
            float tong = 0;
            for (int j = 0; j < 9; j++) {
                tong += temp_S_tg[i][j];
            }
            temp_S[i] = (float) Math.sqrt(tong);
        }

        //Tinh S-
        float[][] temp_S1_tg = new float[5][9];
        for (int j = 0; j < 9; j++) {
            for (int i = 0; i < n; i++) {
                temp_S1_tg[i][j] = (temp_v[i][j] - temp_A1[j]) * (temp_v[i][j] - temp_A1[j]);
            }
        }

        float[] temp_S1 = new float[n];

        for (int i = 0; i < n; i++) {
            float tong = 0;
            for (int j = 0; j < 9; j++) {
                tong += temp_S1_tg[i][j];
            }
            temp_S1[i] = (float) Math.sqrt(tong);
        }

        //Tinh C*
        double value = 0;
        DecimalFormat df = new DecimalFormat("0.0000");

        temp_C = new float[n];
        for (int i = 0; i < n; i++) {
            value = temp_S1[i] / (temp_S[i] + temp_S1[i]);
            String str_tg = df.format(value);
            temp_C[i] = Float.valueOf(str_tg);
        }

        diem_danhgia = new Vector();
        for (int i = 0; i < n; i++) {
            Info_Danhgia info = new Info_Danhgia();
            info.name = jTable1.getValueAt(i, 1).toString();
            info.x1 = Integer.valueOf(jTable1.getValueAt(i, 2).toString());
            info.x2 = Integer.valueOf(jTable1.getValueAt(i, 3).toString());
            info.x3 = Integer.valueOf(jTable1.getValueAt(i, 4).toString());
            info.x4 = Integer.valueOf(jTable1.getValueAt(i, 5).toString());
            info.x5 = Integer.valueOf(jTable1.getValueAt(i, 6).toString());
            info.x6 = Integer.valueOf(jTable1.getValueAt(i, 7).toString());
            info.x7 = Integer.valueOf(jTable1.getValueAt(i, 8).toString());
            info.x8 = Integer.valueOf(jTable1.getValueAt(i, 9).toString());
            info.x9 = Integer.valueOf(jTable1.getValueAt(i, 10).toString());
            info.danh_gia = temp_C[i];
            diem_danhgia.add(info);
        }
    }

    // Sap xep du lieu danh gia cua chuyen gia tu nho den lon
    public void sap_Xep() {

        Info_Danhgia temp = new Info_Danhgia();

        for (int i = 0; i < diem_danhgia.size(); i++) {
            for (int j = 0; j <= i; j++) {
                if (((Info_Danhgia) diem_danhgia.elementAt(i)).danh_gia <= ((Info_Danhgia) diem_danhgia.elementAt(j)).danh_gia) {
                    temp = (Info_Danhgia) diem_danhgia.elementAt(i);
                    diem_danhgia.setElementAt((Info_Danhgia) diem_danhgia.elementAt(j), i);
                    diem_danhgia.setElementAt(temp, j);
                }
            }
        }
    }

    //Danh gia truyen thong khong trong so
    public void process_DG_TT() {
        danhgia_tt = new float[9];

        for (int j = 0; j < 9; j++) {
            int tong = 0;
            for (int i = 0; i < n; i++) {
                tong += mang_diem_DG[i][j];
            }
            danhgia_tt[j] = (float) tong / n;
        }
    }

    // Hien thi bang xep hang danh gia cua chuyen gia
    public void input_table3() {
        Object[][] oj = new Object[n][12];

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
                oj,
                new String[]{
                    "TT", "Tên", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X9", "Độ tích cực"
                }) {

            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jTable3.setRowSelectionAllowed(true);
        jScrollPane3.setViewportView(jTable3);
        jTable3.getColumnModel().getColumn(0).setResizable(false);
        jTable3.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTable3.getColumnModel().getColumn(1).setResizable(false);
        jTable3.getColumnModel().getColumn(1).setPreferredWidth(150);
        jTable3.getColumnModel().getColumn(2).setResizable(false);
        jTable3.getColumnModel().getColumn(3).setResizable(false);
        jTable3.getColumnModel().getColumn(4).setResizable(false);
        jTable3.getColumnModel().getColumn(5).setResizable(false);
        jTable3.getColumnModel().getColumn(6).setResizable(false);
        jTable3.getColumnModel().getColumn(7).setResizable(false);
        jTable3.getColumnModel().getColumn(8).setResizable(false);
        jTable3.getColumnModel().getColumn(9).setResizable(false);
        jTable3.getColumnModel().getColumn(10).setResizable(false);
        jTable3.getColumnModel().getColumn(11).setResizable(false);
        jTable3.getColumnModel().getColumn(11).setPreferredWidth(150);

        for (int i = 0; i < n; i++) {
            jTable3.setValueAt(i, i, 0);
            jTable3.setValueAt(((Info_Danhgia) diem_danhgia.elementAt(i)).name, i, 1);
            jTable3.setValueAt(((Info_Danhgia) diem_danhgia.elementAt(i)).x1, i, 2);
            jTable3.setValueAt(((Info_Danhgia) diem_danhgia.elementAt(i)).x2, i, 3);
            jTable3.setValueAt(((Info_Danhgia) diem_danhgia.elementAt(i)).x3, i, 4);
            jTable3.setValueAt(((Info_Danhgia) diem_danhgia.elementAt(i)).x4, i, 5);
            jTable3.setValueAt(((Info_Danhgia) diem_danhgia.elementAt(i)).x5, i, 6);
            jTable3.setValueAt(((Info_Danhgia) diem_danhgia.elementAt(i)).x6, i, 7);
            jTable3.setValueAt(((Info_Danhgia) diem_danhgia.elementAt(i)).x7, i, 8);
            jTable3.setValueAt(((Info_Danhgia) diem_danhgia.elementAt(i)).x8, i, 9);
            jTable3.setValueAt(((Info_Danhgia) diem_danhgia.elementAt(i)).x9, i, 10);
            jTable3.setValueAt(((Info_Danhgia) diem_danhgia.elementAt(i)).danh_gia, i, 11);
        }
    }

    //----------------------- DANH GIA VA TU VAN -------------------------------
    public String[] danhgia_Tuvan(float[] chose_danhgia) throws SQLException {

        // Chon chuyen gia co danh gia phu hop
//        row_select = jTable3.getSelectedRow();
//        chose_danhgia = new int[9];             // mang du lieu danh gia cua chuyen gia duoc chon
//            for (int i = 0; i < 9; i++) {
//                chose_danhgia[i] = Integer.valueOf(jTable3.getValueAt(row_select,i+2).toString());
//            }    
        String[] str_final = new String[2];
        //Danh gia chat luong bai giang
        float danhgia = 0;              //gia tri danh gia bai giang    S=Xi*hi
        int ma_sk_danhgia = 0;
        int can_duoi = 0;
        int dem = 1;

        for (int i = 0; i < chose_danhgia.length; i++) {
            float tg = chose_danhgia[i] * mang_Trongso[i];
            danhgia += tg;
        }

        DecimalFormat df = new DecimalFormat("0.0000");
        String str = df.format(danhgia);
        danhgia = Float.valueOf(str);

        DaiSoGiaTu daiSoGiaTu = new DaiSoGiaTu();
        daiSoGiaTu.DanhGia(dem, str_final, can_duoi, ma_sk_danhgia);
        
  

        if (danhgia > 4) {
            for (int i = 0; i < chose_danhgia.length; i++) {
                if (chose_danhgia[i] < can_duoi) {
                    dem++;
                }
            }
        }

        // Danh gia tren trung binh va ko co tieu chi < can duoi
        float[][] matran_Trongso = new float[2][mang_Trongso.length];
        int dem2 = 0;

        if ((danhgia > 4) && (dem == 1)) {

            for (int i = 0; i < mang_Trongso.length; i++) {
                matran_Trongso[0][i] = i;
                matran_Trongso[1][i] = mang_Trongso[i];
            }

            float tg = 0;

            for (int i = 0; i < mang_Trongso.length; i++) {
                for (int j = 0; j <= i; j++) {
                    if (matran_Trongso[1][i] > matran_Trongso[1][j]) {
                        tg = matran_Trongso[0][i];
                        matran_Trongso[0][i] = matran_Trongso[0][j];
                        matran_Trongso[0][j] = tg;
                    }
                }
            }

            if (ma_sk_danhgia == 3) {
                dem2 = 4;
            }
            if (ma_sk_danhgia == 4) {
                dem2 = 3;
            }
            if (ma_sk_danhgia == 5) {
                dem2 = 2;
            }

        }

        // Danh gia tren trung binh va co tieu chi < can duoi           
        if ((4 < danhgia) && (dem > 1)) {
            ma_sk_danhgia = 6;
        }

        if ((danhgia > 4) && (dem == 1)) {
            dem = dem2;
        }

        int[] mang_tuvan = new int[dem];
        mang_tuvan[0] = ma_sk_danhgia;
        int dem_tg = 0;

        if (ma_sk_danhgia == 6) {
            for (int i = 0; i < chose_danhgia.length; i++) {
                if (chose_danhgia[i] < can_duoi) {
                    dem_tg++;
                    mang_tuvan[dem_tg] = i + 7;
                }
            }
        }

        if ((ma_sk_danhgia > 2) && (ma_sk_danhgia < 6)) {
            mang_tuvan[0] = 6;
            for (int i = 1; i < mang_tuvan.length; i++) {
                mang_tuvan[i] = (int) matran_Trongso[0][i - 1] + 7;
            }
        }

        int t = mang_tuvan.length;

        //Danh gia thieu sot cua bai giang
        String[] mang_dk_tv;                // mang dieu kien danh gia thieu sot
        String str_tb = new String();

        if (danhgia <= 4) {
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT ID_IF From [Rules_ Error] Where ID_THEN ='" + ma_sk_danhgia + "'");
            while (rs.next()) {
                str_tb = rs.getString("ID_IF");
            }
            mang_dk_tv = str_tb.split(",");
        } else {
            int[][] mang_if = new int[mang_tuvan.length - 1][2];

            for (int i = 0; i < mang_tuvan.length - 1; i++) {
                mang_if[i][0] = 6;
                mang_if[i][1] = mang_tuvan[i + 1];
            }

            String[] mang_str_kha = new String[mang_if.length];
            stmt = con.createStatement();

            for (int i = 0; i < mang_if.length; i++) {
                ResultSet rs = stmt.executeQuery("SELECT ID_IF From [Rules_ Error] Where ID_THEN ='" + mang_if[i][0] + "," + mang_if[i][1] + "'");
                rs.next();
                mang_str_kha[i] = rs.getString("ID_IF");
            }

            String str_kha = mang_str_kha[0];

            for (int i = 1; i < mang_str_kha.length; i++) {
                str_kha += ',';
                str_kha += mang_str_kha[i];
            }
            mang_dk_tv = str_kha.split(",");
        }

        // Ket luan tu van bai giang
        String[] mang_tv = new String[mang_dk_tv.length];       // mang ket luan tu van

        for (int i = 0; i < mang_dk_tv.length; i++) {
            ResultSet rs = stmt.executeQuery("SELECT ID_THEN From [Rules_ Advisory] Where ID_IF ='" + mang_dk_tv[i] + "'");
            while (rs.next()) {
                mang_tv[i] = rs.getString("ID_THEN");
            }
        }

        String sum_str = null;
        if (mang_tv.length > 1) {
            sum_str = mang_tv[0];
            for (int i = 1; i < mang_tv.length; i++) {
                sum_str += ",";
                sum_str += mang_tv[i];
            }
        } else {
            sum_str = mang_tv[0];
        }
        String[] final_str = sum_str.split(",");

        String[] final_tuvan = new String[final_str.length];
        for (int i = 0; i < final_str.length; i++) {
            ResultSet rs = stmt.executeQuery("SELECT Events From [Events] Where ID_Events ='" + final_str[i] + "'");
            while (rs.next()) {
                final_tuvan[i] = rs.getString("Events");
            }
        }

        str_final[1] = " - " + final_tuvan[0];
        for (int i = 1; i < final_tuvan.length; i++) {
            str_final[1] += "\n - " + final_tuvan[i];
        }

        return str_final;

    }

    public void connectionSQL() {
        String url = "jdbc:sqlserver://localhost:1433;databaseName=Do_an";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Danhgia_Tuvan.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            String link = "jdbc:sqlserver://localhost:1433;databaseName=Do_an;user=maison;password=son123456";
            con = DriverManager.getConnection(link);
        } catch (SQLException ex) {
            System.out.println(ex.toString());
            JOptionPane jo = new JOptionPane("Thông báo");
            jo.showMessageDialog(this, "Gặp lỗi kết nối CSDL");
            Logger.getLogger(Danhgia_Tuvan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void docFile() {
        try {
            FileReader fr = new FileReader("config.txt");
            BufferedReader br = new BufferedReader(fr);
            // khai bao 1 bien chuoi luu gia tri doc duoc tu file :
            String str = "";
            String str_tg = "";
            //kiem tra xem co doc duoc khong roi in ra :
            while ((str = br.readLine()) != null) {
                System.out.println(str);
                str_tg += str;
            }
            String[] config = str_tg.split(";");
            userName = config[0];
            password = config[1];
//            userName = "";
//            password = "";
            br.close();
            System.out.println("doc file hoan tat");
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    public static void set_Table1(Object[][] oj_lesson) {
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                oj_lesson,
                new String[]{
                    "TT", "Tên", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X9"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, true, true, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }

        });
        jTable1.setCellSelectionEnabled(true);
//            jTable1.setRowSelectionAllowed(true);
        jTable1.setDefaultEditor(Integer.class,
                new IntegerEditor(1, 9));

        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(180);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setResizable(false);
        jTable1.getColumnModel().getColumn(4).setResizable(false);
        jTable1.getColumnModel().getColumn(5).setResizable(false);
        jTable1.getColumnModel().getColumn(6).setResizable(false);
        jTable1.getColumnModel().getColumn(7).setResizable(false);
        jTable1.getColumnModel().getColumn(8).setResizable(false);
        jTable1.getColumnModel().getColumn(9).setResizable(false);
        jTable1.getColumnModel().getColumn(10).setResizable(false);
    }

    public void show_Danhgia(int x) {
        try {
            vt_rating = new Vector();
            String str = "Select X1,X2,X3,X4,X5,X6,X7,X8,X9 From Lesson, Rating where Lesson.ID_Lesson = Rating.ID_Lesson and Lesson.ID_Lesson=" + x;
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(str);
            while (rs.next()) {
                Info_Rating info_Rating = new Info_Rating();
                info_Rating.x1 = rs.getInt(1);
                info_Rating.x2 = rs.getInt(2);
                info_Rating.x3 = rs.getInt(3);
                info_Rating.x4 = rs.getInt(4);
                info_Rating.x5 = rs.getInt(5);
                info_Rating.x6 = rs.getInt(6);
                info_Rating.x7 = rs.getInt(7);
                info_Rating.x8 = rs.getInt(8);
                info_Rating.x9 = rs.getInt(9);
                vt_rating.add(info_Rating);
            }

            oj_lesson = new Object[vt_rating.size()][11];
            for (int i = 0; i < Danhgia_Tuvan.vt_rating.size(); i++) {
                oj_lesson[i][0] = i + 1;
                oj_lesson[i][1] = "Chuyên gia " + (i + 1);
                oj_lesson[i][2] = ((Info_Rating) vt_rating.elementAt(i)).x1;
                oj_lesson[i][3] = ((Info_Rating) vt_rating.elementAt(i)).x2;
                oj_lesson[i][4] = ((Info_Rating) vt_rating.elementAt(i)).x3;
                oj_lesson[i][5] = ((Info_Rating) vt_rating.elementAt(i)).x4;
                oj_lesson[i][6] = ((Info_Rating) vt_rating.elementAt(i)).x5;
                oj_lesson[i][7] = ((Info_Rating) vt_rating.elementAt(i)).x6;
                oj_lesson[i][8] = ((Info_Rating) vt_rating.elementAt(i)).x7;
                oj_lesson[i][9] = ((Info_Rating) vt_rating.elementAt(i)).x8;
                oj_lesson[i][10] = ((Info_Rating) vt_rating.elementAt(i)).x9;

            }
            set_Table1(oj_lesson);
            Danhgia_Tuvan.jSpinner1.setModel(new javax.swing.SpinnerNumberModel(vt_rating.size(), vt_rating.size(), null, Integer.valueOf(1)));
        } catch (SQLException ex) {
            Logger.getLogger(Danhgia_Tuvan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void update_Rating() {
        int x = ((Info_Lesson) vt_chose_lesson.elementAt(0)).ID_lesson;
        try {
            String str_1 = "Delete From Rating where ID_Lesson=" + x;
            PreparedStatement ptsmt = con.prepareCall(str_1);
            ptsmt.execute();
            con.commit();
        } catch (SQLException ex) {
            Logger.getLogger(Danhgia_Tuvan.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            con.setAutoCommit(false);
            stmt = con.createStatement();
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                stmt.addBatch("Insert Rating Values(" + x + "," + jTable1.getValueAt(i, 2) + "," + jTable1.getValueAt(i, 3) + "," + jTable1.getValueAt(i, 4) + "," + jTable1.getValueAt(i, 5) + "," + jTable1.getValueAt(i, 6) + "," + jTable1.getValueAt(i, 7) + "," + jTable1.getValueAt(i, 8) + "," + jTable1.getValueAt(i, 9) + "," + jTable1.getValueAt(i, 10) + ")");
            }
            stmt.executeBatch();
            con.commit();
        } catch (SQLException ex) {
            Logger.getLogger(Danhgia_Tuvan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void sendMail(String mail, String nameLesson, String final_Tuvan) {
        try {
            SendMail.send("smtp.gmail.com", mail, "quang8490@gmail.com", "maiyeuanh2", nameLesson, final_Tuvan);
            JOptionPane jo = new JOptionPane("Thông báo");
            jo.showMessageDialog(this, "Gửi mail thành công!");
        } catch (Exception ex) {
            Logger.getLogger(Danhgia_Tuvan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
